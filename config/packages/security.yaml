security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        user_provider:
            entity:
                class: App\UserDomain\Domain\Model\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/admin
            provider: user_provider
            lazy: true
            form_login:
                login_path: admin_login
                check_path: admin_login
                default_target_path: admin_dashboard
                enable_csrf: true
                csrf_token_id: authenticate      # используем в шаблоне
                csrf_parameter: _csrf_token     # имя параметра (по умолчанию такое)
            logout:
                path: admin_logout
                target: admin_login
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path:      /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                provider: user_provider
                username_path: username
                password_path: password
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
            refresh_jwt: ~
            entry_point: jwt
    access_control:
        - { path: ^/admin/login, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/api/login$, roles: PUBLIC_ACCESS }
        - { path: ^/api/user/logout, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
